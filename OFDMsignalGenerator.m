% Generated by MATLAB(R) 9.7 (R2019b) and Communications Toolbox 7.2 (R2019b).
% Generated on: 28-May-2020 19:15:32

%% Generate OFDM Waveform
% OFDM configuration:
ofdmMod = comm.OFDMModulator('FFTLength', 72, ...
    'NumGuardBandCarriers', [0;0], ...
    'InsertDCNull', false, ...
    'CyclicPrefixLength', [16], ...
    'Windowing', false, ...
    'NumSymbols', 14, ...
    'NumTransmitAntennas', 1, ...
    'PilotInputPort', true, ...
    'PilotCarrierIndices', [11;27;43;60]);
M = 2; 	 % Modulation order
% input bit source:
in = randi([0 1], 952, 1);

dataInput = qammod(in, M, 'bin', 'InputType', 'bit', 'UnitAveragePower', true);
ofdmInfo = info(ofdmMod);
ofdmSize = ofdmInfo.DataInputSize;
dataInput = reshape(dataInput, ofdmSize);

% waveform generation:
pilotInput = ones(4, 14, 1);
    Txwaveform = ofdmMod(dataInput, pilotInput);

Fs = 7.2e+07;								 % sample rate of waveform

%% Visualize OFDM Waveform
% Spectrum Analyzer
%spectrum = dsp.SpectrumAnalyzer('SampleRate', Fs);
%spectrum(Txwaveform);
%release(spectrum);

% OFDM Subcarrier Mapping
showResourceMapping(ofdmMod);
%% channnel shit 
chcfg.DelayProfile = 'EPA';
chcfg.NRxAnts = 1;
chcfg.DopplerFreq = 5;
chcfg.MIMOCorrelation = 'Low';
chcfg.Seed = 0;
chcfg.InitPhase = 'Random';
chcfg.ModelType = 'GMEDS';
chcfg.NTerms = 16;
chcfg.NormalizeTxAnts = 'On';
chcfg.NormalizePathGains = 'On';
chcfg.SamplingRate = Fs;
chcfg.InitTime = 0;
%% calculate the waveform
Rxwaveform =  lteFadingChannel(chcfg,Txwaveform);

% add noise 
SNRdB = 22;             % Desired SNR in dB
SNR = 10^(SNRdB/20);    % Linear SNR  

N0 = 1/(sqrt(2*1*SNR));

% Create additive white Gaussian noise
noise = N0*complex(randn(size(Rxwaveform)),randn(size(Rxwaveform)));   
%% Get the perfect H 
%% channnel shit 

ue.NULRB = 6;
ue.CyclicPrefixUL = 'Normal';
ue.NTxAnts = 1;
ue.TotSubframes = 1;

enb.NDLRB = 6;
enb.CyclicPrefix = 'Normal';
enb.CellRefP = 1;
enb.TotSubframes = 1;

PerfectH = lteULPerfectChannelEstimate(enb,chcfg);
imagesc(abs(PerfectH))
SNR = 40;
NoisyH = awgn(PerfectH,SNR);
[peaksnr,snr] = psnr(NoisyH,PerfectH);
abs(snr)



